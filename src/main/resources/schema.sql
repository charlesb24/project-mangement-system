DROP TABLE IF EXISTS projects;
DROP TABLE IF EXISTS requirements;
DROP TABLE IF EXISTS tasks;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS roles;
DROP TABLE IF EXISTS users_roles;

CREATE TABLE IF NOT EXISTS projects
(
    project_id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name           VARCHAR(255)                            NOT NULL,
    description    VARCHAR(2048)                           NOT NULL,
    priority       INTEGER,
    status         SMALLINT,
    created_by_id  BIGINT                                  NOT NULL,
    assigned_to_id BIGINT,
    created_at     TIMESTAMP WITHOUT TIME ZONE,
    updated_at     TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_projects PRIMARY KEY (project_id),
    CONSTRAINT fk_projects_on_assigned_to FOREIGN KEY (assigned_to_id) REFERENCES users (user_id),
    CONSTRAINT fk_projects_on_created_by FOREIGN KEY (created_by_id) REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS requirements
(
    requirement_id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    task_id        BIGINT,
    title          VARCHAR(255)                            NOT NULL,
    description    VARCHAR(2048)                           NOT NULL,
    status         SMALLINT,
    created_by_id  BIGINT                                  NOT NULL,
    assigned_to_id BIGINT,
    created_at     TIMESTAMP WITHOUT TIME ZONE,
    updated_at     TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_requirements PRIMARY KEY (requirement_id),
    CONSTRAINT fk_requirements_on_task FOREIGN KEY (task_id) REFERENCES tasks (task_id),
    CONSTRAINT fk_requirements_on_assigned_to FOREIGN KEY (assigned_to_id) REFERENCES users (user_id),
    CONSTRAINT fk_requirements_on_created_by FOREIGN KEY (created_by_id) REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS roles
(
    role_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name    VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_roles PRIMARY KEY (role_id),
    CONSTRAINT uc_roles_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS tasks
(
    task_id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    project_id     BIGINT,
    name           VARCHAR(255)                            NOT NULL,
    description    VARCHAR(2048)                           NOT NULL,
    priority       INTEGER,
    status         SMALLINT,
    created_by_id  BIGINT                                  NOT NULL,
    assigned_to_id BIGINT,
    created_at     TIMESTAMP WITHOUT TIME ZONE,
    updated_at     TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_tasks PRIMARY KEY (task_id),
    CONSTRAINT fk_tasks_on_project FOREIGN KEY (project_id) REFERENCES projects (project_id),
    CONSTRAINT fk_tasks_on_assigned_to FOREIGN KEY (assigned_to_id) REFERENCES users (user_id),
    CONSTRAINT fk_tasks_on_created_by FOREIGN KEY (created_by_id) REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS users
(
    user_id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email          VARCHAR(255)                            NOT NULL,
    password       VARCHAR(255)                            NOT NULL,
    enabled        BOOLEAN                                 NOT NULL,
    locked         BOOLEAN                                 NOT NULL,
    first_name     VARCHAR(255)                            NOT NULL,
    middle_name    VARCHAR(255),
    last_name      VARCHAR(255)                            NOT NULL,
    phone          VARCHAR(255),
    contact_method VARCHAR(255),
    manager_id     BIGINT,
    date_created   TIMESTAMP WITHOUT TIME ZONE,
    date_updated   TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_users PRIMARY KEY (user_id),
    CONSTRAINT uc_users_email UNIQUE (email),
    CONSTRAINT uc_users_phone UNIQUE (phone)
);

CREATE TABLE IF NOT EXISTS users_roles
(
    role_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    CONSTRAINT fk_users_roles_on_role FOREIGN KEY (role_id) REFERENCES roles (role_id),
    CONSTRAINT fk_users_roles_on_user FOREIGN KEY (user_id) REFERENCES users (user_id)
);